package com.zpmc.analysis.service.impl;

import com.zpmc.analysis.common.Result;
import com.zpmc.analysis.service.ResumeService;
import com.zpmc.analysis.utils.OCR;
import com.zpmc.analysis.utils.ZipUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @author: 倪涛涛
 * @create: 2023-10-19 12:11
 **/
@Service
public class ResumeServiceImpl implements ResumeService {
    @Override
    public synchronized Result importData(MultipartFile file) throws IOException {
        long currentTimeMillis = System.currentTimeMillis();
        //   file//时间//root
        String filePath = "file//" + currentTimeMillis + "//" + file.getOriginalFilename();
        String fileOriginalName = file.getOriginalFilename().split("\\.")[0];
        //获取文件名
        InputStream path = null;
        FileInputStream fis = null;
        FileOutputStream fos = null;
        try {
            path = file.getInputStream();
            fis = (FileInputStream) path;
            File dir = new File("file//" + currentTimeMillis);
            if (!dir.exists()) {
                dir.mkdirs();
            }
            fos = new FileOutputStream(filePath);
            int readlen = 0;
            //字节数组，一次读取8个字节
            byte[] buf = new byte[8];
            while ((readlen = fis.read(buf)) != -1) {
                fos.write(buf, 0, readlen);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            path.close();
            fis.close();
            fos.close();
        }

        //解压文件
        ZipUtils.unZip(filePath, "file//" + currentTimeMillis, "gbk");
        //处理完去压缩 删除中间文件夹
        analysis("file\\" + currentTimeMillis + "\\" + fileOriginalName);
        FileOutputStream fileOutputStream = new FileOutputStream("file\\" + currentTimeMillis + "\\result_" + fileOriginalName + ".zip");
        ZipUtils.toZip("file\\" + currentTimeMillis + "\\" + fileOriginalName, fileOutputStream, true, "gbk");
        fileOutputStream.close();
        return Result.success(currentTimeMillis + "result_" + fileOriginalName);
    }

    @Override
    public void exportData(HttpServletResponse response, String path) throws IOException {
        char[] chars = path.toCharArray();
        StringBuffer targetPath = new StringBuffer("");
        for (int i = 0; i < chars.length; i++) {
            if (chars[i] <= '9') {
                targetPath.append(chars[i]);
            }else{
                targetPath.append("\\");
                targetPath.append(path.substring(i));
                break;
            }
        }
        System.out.println(targetPath);
        File file = new File("file\\" + targetPath + ".zip");
        if (file.exists()) {
            response.setContentType("application/zip");
            response.addHeader("Content-Disposition", "attachment; filename=analysis_result.zip");
            FileInputStream fileInputStream = new FileInputStream(file);
            ServletOutputStream outputStream = response.getOutputStream();
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = fileInputStream.read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }
            fileInputStream.close();
            outputStream.close();
        } else {
            // 处理文件不存在的情况
            response.getWriter().println("File not found");
        }
    }

    public static void analysis(String filePath) throws IOException {
        File root = new File(filePath);
        if (root.exists() && root.isDirectory()) {
            //各院文件夹
            File[] files = root.listFiles();
            for (File file : files) {
                if (file.exists() && file.isDirectory()) {
                    getExcel(filePath, file.getPath());
                }
            }
        }
    }

    public static void getExcel(String rootPath, String folderPath) throws IOException {
        // 创建一个新的工作簿
        Workbook workbook = new XSSFWorkbook();

        // 创建一个工作表
        Sheet sheet = workbook.createSheet("Sheet1");
        sheet.setColumnWidth(0, 10 * 256);
        sheet.setColumnWidth(1, 10 * 256);
        sheet.setColumnWidth(2, 5 * 256);
        sheet.setColumnWidth(3, 40 * 256);
        sheet.setColumnWidth(4, 16 * 256);
        sheet.setColumnWidth(5, 5 * 256);
        sheet.setColumnWidth(6, 40 * 256);
        sheet.setColumnWidth(7, 15 * 256);
        sheet.setColumnWidth(8, 20 * 256);

        // 创建行和单元格
        Row row = sheet.createRow(0);
        Cell cell = row.createCell(0);
        cell.setCellValue("部门");
        cell = row.createCell(1);
        cell.setCellValue("姓名");
        cell = row.createCell(2);
        cell.setCellValue("性别");
        cell = row.createCell(3);
        cell.setCellValue("学校");
        cell = row.createCell(4);
        cell.setCellValue("学校是否在名录内");
        cell = row.createCell(5);
        cell.setCellValue("学历");
        cell = row.createCell(6);
        cell.setCellValue("专业");
        cell = row.createCell(7);
        cell.setCellValue("电话");
        cell = row.createCell(8);
        cell.setCellValue("邮箱");

        // 创建第二行
        int rowIndex = 1;
        String partName = folderPath.split("\\\\")[folderPath.split("\\\\").length - 1];
        File folder = new File(folderPath);
        // 检查文件夹是否存在
        if (folder.exists() && folder.isDirectory()) {
            File[] files = folder.listFiles();
            if (files != null) {
                for (File file : files) {
                    if (file.isFile()) {
                        row = sheet.createRow(rowIndex);
                        String newName = getInfo(partName, folderPath + "\\" + file.getName(), row, cell);
                        file.renameTo(new File(folderPath + "\\" + newName));
                        rowIndex++;
                    }
                }
            }
        } else {
            System.out.println("文件夹不存在或不是文件夹。");
        }

        try {
            // 导出工作簿到文件
            FileOutputStream fileOut = new FileOutputStream(rootPath + "\\" + partName + ".xlsx");
            workbook.write(fileOut);
            fileOut.close();

            // 关闭工作簿
            workbook.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static String getInfo(String partName, String filePath, Row row, Cell cell) throws IOException {
        //调用百度OCR
        String result = OCR.getResult(filePath);
        cell = row.createCell(0);
        cell.setCellValue(partName);

        cell = row.createCell(1);
        cell.setCellValue(getName(result));
        cell = row.createCell(2);
        cell.setCellValue(getSex(result));
        cell = row.createCell(3);
        Set school = getSchool(result);
        cell.setCellValue(String.valueOf(school).substring(1, String.valueOf(school).length() - 1));
        cell = row.createCell(4);
        String sc = checkSchool(school);
        cell.setCellValue(sc != null ? sc : "不在");
        cell = row.createCell(5);
        cell.setCellValue(findHighestEducationLevel(result));
        cell = row.createCell(6);
        Set speciality = getSpeciality(result);
        cell.setCellValue(String.valueOf(speciality).substring(1, String.valueOf(speciality).length() - 1));
        cell = row.createCell(7);
        cell.setCellValue(getPhoneNumber(result));
        cell = row.createCell(8);
        cell.setCellValue(getEmail(result));
        String name = getName(result);
//        System.out.println(result);
        System.out.println("提取的姓名为：" + name);
//        System.out.println("提取的性别为：" + getSex(result));
//        System.out.println("提取的最高学历：" + findHighestEducationLevel(result));
//        System.out.print("提取的学校：" + school);
//        System.out.println(sc == null ? "不在" : sc + "在名录内");
//        System.out.println("提取的学历：" + findHighestEducationLevel(result));
//        System.out.println("提取的专业：" + getSpeciality(result));
//        System.out.println("提取的手机号为：" + getPhoneNumber(result));
//        System.out.println("提取的邮箱：" + getEmail(result));
//        System.out.println("-----------------------------");
        return name + " " + (sc == null ? "不在名录内" : sc) + ".pdf";
    }

    private static String getSex(String result) {
        if (result.contains("女")) {
            return "女";
        } else {
            return "男";
        }
    }

    public static String getName(String result) {
        //有 姓名: 的先查姓名
        int nameIndex = result.indexOf("姓名");
        if (nameIndex != -1) {
            result = result.substring(nameIndex + 2, nameIndex + 10);
            char[] charsArr = result.toCharArray();
            for (int start = 0; start < charsArr.length; start++) {
                if (isChineseCharacter(charsArr[start])) {
                    //找到这个姓了
                    for (int end = start + 1; end < charsArr.length; end++) {
                        if (!isChineseCharacter(charsArr[end])) {
                            if ((end - start <= 3) && (end - start > 1)) {
                                return result.substring(start, end);
                            }
                        }
                    }
                }
            }
        }

        //一般来说，姓名会出现在前几行
        String namePre = "李王张刘陈杨赵黄周吴徐孙胡朱高林何郭马罗梁宋郑谢韩唐冯于董萧曹袁邓许傅沈曾彭吕苏卢蒋蔡贾丁魏薛叶阎余潘杜戴夏钟汪田任姜范石姚谭廖邹熊陆郝孔白崔康毛邱秦史顾侯邵孟龙万段漕钱汤尹黎易常武乔贺赖龚文庞樊兰殷施陶洪翟安颜倪严牛温芦季俞章鲁葛伍韦申尤毕聂丛焦向柳邢路岳齐沿梅莫庄辛祝左涂谷祁时舒耿牟卜路詹关苗凌费纪靳盛童欧甄项曲成游阳裴席卫查屈鲍位覃霍翁隋植甘薄单包司柏宁柯阮桂闵欧阳解强柴华车冉房边辜吉饶刁瞿戚丘古米池滕晋苑邬臧畅宫来嵺苟全褚廉娄盖符奚木穆燕郎邸冀谈姬屠连郜晏栾郁商蒙喻揭窦迟宇敖糜鄢冷卓花仇艾蓝都巩稽井练仲乐虞卞封竺冼原官衣楚佟栗匡宗台巫鞠僧桑荆谌银扬明沙薄伏岑习胥保和蔺";
        // 定义正则表达式来匹配包含姓名的行，一般来说前一百个字符里就有姓名
        String newRes = result;
        char[] chars = newRes.toCharArray();

        //应该用nameArr来匹配简历

        for (int start = 0; start < chars.length; start++) {
            if (isChineseCharacter(chars[start])) {
                if (namePre.indexOf(chars[start]) != -1) {
                    //找到这个姓了
                    for (int end = start + 1; end < chars.length; end++) {
                        if (!isChineseCharacter(chars[end])) {
                            if ((end - start <= 3) && (end - start > 1)) {
                                return newRes.substring(start, end);
                            }
                        }
                    }
                }
            }
        }

        return "未发现姓名";
    }

    //判断这个字符是不是中文
    public static boolean isChineseCharacter(char c) {
        // 检查字符的Unicode码点是否在中文字符范围内
        return (c >= '\u4e00' && c <= '\u9fff');
    }

    public static String getPhoneNumber(String str) {
        // 定义匹配手机号的正则表达式
        String regex = "(\\+?\\d{11}|\\d{11}|\\d{3}-\\d{4}-\\d{4})";
        // 定义正则表达式来匹配手机号码
        Pattern pattern = Pattern.compile(regex);
        // 使用Matcher来查找匹配项
        Matcher matcher = pattern.matcher(str);
        // 提取所有匹配的手机号码
        while (matcher.find()) {
            String phoneNumber = matcher.group(1).replaceAll("-", ""); // 去除连字符
            return phoneNumber;
        }
        return "未找到手机号";
    }


    public static String findHighestEducationLevel(String input) {
        if (input.contains("博士")) {
            return "博士";
        }
        if (input.contains("研究生")) {
            return "硕士";
        }
        if (input.contains("硕士")) {
            return "硕士";
        }
        if (input.contains("本科")) {
            return "本科";
        }
        if (input.contains("大专")) {
            return "大专";
        }
        if (input.contains("高中")) {
            return "高中";
        }
        if (input.contains("中专")) {
            return "中专";
        }
        return "未发现学历";
    }

    public static String getEmail(String inputString) {
        // 使用正则表达式匹配电子邮件地址
        Pattern pattern = Pattern.compile("[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}");
        Matcher matcher = pattern.matcher(inputString);

        // 找到匹配的电子邮件地址
        while (matcher.find()) {
            String email = matcher.group();
            return email;
        }
        return "未找到";
    }

    public static Set getSpeciality(String inputString) {
        Set<String> result = new HashSet<>();
        String[] speciality = {"哲学", "逻辑学", "宗教学", "伦理学", "经济学", "经济统计学", "国民经济管理", "资源与环境经济学", "商务经济学", "能源经济", "劳动经济学", "经济工程", "数字经济", "财政学", "税收学", "国际税收", "金融学", "金融工程", "保险学", "投资学", "金融数学", "信用管理", "经济与金融", "精算学", "互联网金融", "金融科技", "金融审计", "国际经济与贸易", "贸易经济", "国际经济发展合作", "法学", "知识产权", "监狱学", "信用风险管理与法律防控", "国际经贸规则", "司法警察学", "社区矫正", "纪检监察", "国际法", "司法鉴定学", "政治学与行政学", "国际政治", "外交学", "国际事务与国际关系", "政治学、经济学与哲学", "国际组织与全球治理", "社会学", "社会工作", "人类学", "女性学", "家政学", "老年学", "社会政策", "民族学", "科学社会主义", "中国共产党历史", "思想政治教育", "马克思主义理论", "工会学", "治安学", "侦查学", "边防管理", "禁毒学", "警犬技术", "经济犯罪侦查", "边防指挥", "消防指挥", "警卫学", "公安情报学", "犯罪学", "公安管理学", "涉外警务", "国内安全保卫", "警务指挥与战术", "技术侦查学", "海警执法", "公安政治工作", "移民管理", "出入境管理", "反恐警务", "消防政治工作", "铁路警务", "教育学", "科学教育", "人文教育", "教育技术学", "艺术教育", "学前教育", "小学教育", "特殊教育", "华文教育", "教育康复学", "卫生教育", "认知科学与技术", "融合教育", "劳动教育", "家庭教育", "孤独症儿童教育", "体育教育", "运动训练", "社会体育指导与管理", "武术与民族传统体育", "运动人体科学", "运动康复", "休闲体育", "体能训练", "冰雪运动", "电子竞技运动与管理", "智能体育工程", "体育旅游", "运动能力开发", "汉语言文学", "汉语言", "汉语国际教育", "中国少数民族语言文学", "古典文献学", "应用语言学", "秘书学", "中国语言与文化", "手语翻译", "数字人文", "俄语", "德语", "法语", "西班牙语", "阿拉伯语", "日语", "波斯语", "朝鲜语", "菲律宾语", "梵语巴利语", "印度尼西亚语", "印地语", "柬埔寨语", "老挝语", "缅甸语", "马来语", "蒙古语", "僧伽罗语", "泰语", "乌尔都语", "希伯来语", "越南语", "豪萨语", "斯瓦希里语", "阿尔巴尼亚语", "保加利亚语", "波兰语", "捷克语", "斯洛伐克语", "罗马尼亚语", "葡萄牙语", "瑞典语", "塞尔维亚语", "土耳其语", "希腊语", "匈牙利语", "意大利语", "泰米尔语", "普什图语", "世界语", "孟加拉语", "尼泊尔语", "克罗地亚语", "荷兰语", "芬兰语", "乌克兰语", "挪威语", "丹麦语", "冰岛语", "爱尔兰语", "拉脱维亚语", "立陶宛语", "斯洛文尼亚语", "爱沙尼亚语", "马耳他语", "哈萨克语", "乌兹别克语", "祖鲁语", "拉丁语", "翻译", "商务英语", "阿姆哈拉语", "吉尔吉斯语", "索马里语", "土库曼语", "加泰罗尼亚语", "约鲁巴语", "亚美尼亚语", "马达加斯加语", "格鲁吉亚语", "阿塞拜疆语", "阿非利卡语", "马其顿语", "塔吉克语", "茨瓦纳语", "恩德贝莱语", "科摩罗语", "克里奥尔语", "绍纳语", "提格雷尼亚语", "白俄罗斯语", "毛利语", "汤加语", "萨摩亚语", "库尔德语", "比斯拉马语", "达里语", "德顿语", "迪维希语", "斐济语", "库克群岛毛利语", "隆迪语", "卢森堡语", "卢旺达语", "纽埃语", "皮金语", "切瓦语", "塞苏陀语", "桑戈语", "语言学", "塔玛齐格特语", "爪哇语", "旁遮普语", "新闻学", "广播电视学", "广告学", "传播学", "编辑出版学", "网络与新媒体", "数字出版", "时尚传播", "国际新闻与传播", "会展", "历史学", "世界史", "考古学", "文物与博物馆学", "文物保护技术", "外国语言与外国历史", "文化遗产", "古文字学", "科学史", "数学与应用数学", "信息与计算科学", "数理基础科学", "数据计算及应用", "物理学", "应用物理学", "核物理", "声学", "系统科学与工程", "量子信息科学", "化学", "应用化学", "化学生物学", "分子科学与工程", "能源化学", "化学测量学与技术", "资源化学", "天文学", "地理科学", "自然地理与资源环境", "人文地理与城乡规划", "地理信息科学", "大气科学", "应用气象学", "气象技术与工程", "地球系统科学", "海洋科学", "海洋技术", "海洋资源与环境", "军事海洋学", "地球物理学", "空间科学与技术", "防灾减灾科学与工程", "行星科学", "地质学", "地球化学", "地球信息科学与技术", "古生物学", "生物科学", "生物技术", "生物信息学", "生态学", "整合科学", "神经科学", "心理学", "应用心理学", "统计学", "应用统计学", "数据科学", "生物统计学", "理论与应用力学", "工程力学", "机械工程", "机械设计制造及其自动化", "材料成型及控制工程", "机械电子工程", "工业设计", "过程装备与控制工程", "车辆工程", "汽车服务工程", "机械工艺技术", "微机电系统工程", "机电技术教育", "汽车维修工程教育", "智能制造工程", "智能车辆工程", "仿生科学与工程", "新能源汽车工程", "增材制造工程", "智能交互设计", "应急装备技术与工程", "测控技术与仪器", "精密仪器", "智能感知工程", "材料科学与工程", "材料物理", "材料化学", "冶金工程", "金属材料工程", "无机非金属材料工程", "高分子材料与工程", "复合材料与工程", "粉体材料科学与工程", "宝石及材料工艺学", "焊接技术与工程", "功能材料", "纳米材料与技术", "新能源材料与器件", "材料设计科学与工程", "复合材料成型工程", "智能材料与结构", "光电信息材料与器件", "生物材料", "能源与动力工程", "能源与环境系统工程", "新能源科学与工程", "储能科学与工程", "能源服务工程", "氢能科学与工程", "可持续能源", "电气工程及其自动化", "智能电网信息工程", "光源与照明", "电气工程与智能控制", "电机电器智能化", "电缆工程", "能源互联网工程", "智慧能源工程", "电动载运工程", "电子信息工程", "电子科学与技术", "通信工程", "微电子科学与工程", "光电信息科学与工程", "信息工程", "广播电视工程", "水声工程", "电子封装技术", "集成电路设计与集成系统", "医学信息工程", "电磁场与无线技术", "电波传播与天线", "电子信息科学与技术", "电信工程及管理", "应用电子技术教育", "人工智能", "海洋信息工程", "柔性电子学", "智能测控工程", "自动化", "轨道交通信号与控制", "机器人工程", "邮政工程", "核电技术与控制工程", "智能装备与系统", "工业智能", "智能工程与创意设计", "计算机科学与技术", "软件工程", "网络工程", "信息安全", "物联网工程", "数字媒体技术", "智能科学与技术", "空间信息与数字技术", "电子与计算机工程", "数据科学与大数据技术", "网络空间安全", "新媒体技术", "电影制作", "保密技术", "服务科学与工程", "虚拟现实技术", "区块链工程", "密码科学与技术", "土木工程", "建筑环境与能源应用工程", "给排水科学与工程", "建筑电气与智能化", "城市地下空间工程", "道路桥梁与渡河工程", "铁道工程", "智能建造", "土木、水利与海洋工程", "土木、水利与交通工程", "城市水系统工程", "智能建造与智慧交通", "水利水电工程", "水文与水资源工程", "港口航道与海岸工程", "水务工程", "水利科学与工程", "智慧水利", "测绘工程", "遥感科学与技术", "导航工程", "地理国情监测", "地理空间信息工程", "化学工程与工艺", "制药工程", "资源循环科学与工程", "能源化学工程", "化学工程与工业生物工程", "化工安全工程", "涂料工程", "精细化工", "地质工程", "勘查技术与工程", "资源勘查工程", "地下水科学与工程", "旅游地学与规划工程", "智能地球探测", "资源环境大数据工程", "采矿工程", "石油工程", "矿物加工工程", "油气储运工程", "矿物资源工程", "海洋油气工程", "智能采矿工程", "碳储科学与工程", "纺织工程", "服装设计与工程", "非织造材料与工程", "服装设计与工艺教育", "丝绸设计与工程", "轻化工程", "包装工程", "印刷工程", "香料香精技术与工程", "化妆品技术与工程", "生物质能源与材料", "交通运输", "交通工程", "航海技术", "轮机工程", "飞行技术", "交通设备与控制工程", "救助与打捞工程", "船舶电子电气工程", "轨道交通电气与控制", "邮轮工程与管理", "智慧交通", "智能运输工程", "船舶与海洋工程", "海洋工程与技术", "海洋资源开发技术", "海洋机器人", "智慧海洋技术", "航空航天工程", "飞行器设计与工程", "飞行器制造工程", "飞行器动力工程", "飞行器环境与生命保障工程", "飞行器质量与可靠性", "飞行器适航技术", "飞行器控制与信息工程", "无人驾驶航空器系统工程", "智能飞行器技术", "空天智能电推进技术", "飞行器运维工程", "武器系统与工程", "武器发射工程", "探测制导与控制技术", "弹药工程与爆炸技术", "特种能源技术与工程", "装甲车辆工程", "信息对抗技术", "智能无人系统技术", "核工程与核技术", "辐射防护与核安全", "工程物理", "核化工与核燃料工程", "农业工程", "农业机械化及其自动化", "农业电气化", "农业建筑环境与能源工程", "农业水利工程", "土地整治工程", "农业智能装备工程", "森林工程", "木材科学与工程", "林产化工", "家具设计与工程", "木结构建筑与材料", "环境科学与工程", "环境工程", "环境科学", "环境生态工程", "环保设备工程", "资源环境科学", "水质科学与技术", "生物医学工程", "假肢矫形工程", "临床工程技术", "康复工程", "食品科学与工程", "食品质量与安全", "粮食工程", "乳品工程", "酿酒工程", "葡萄与葡萄酒工程", "食品营养与检验教育", "烹饪与营养教育", "食品安全与检测", "食品营养与健康", "食用菌科学与工程", "白酒酿造工程", "建筑学", "城乡规划", "风景园林", "历史建筑保护工程", "人居环境科学与技术", "城市设计", "智慧建筑与建造", "安全工程", "应急技术与管理", "职业卫生工程", "安全生产监管", "生物工程", "生物制药", "合成生物学", "刑事科学技术", "消防工程", "交通管理工程", "安全防范工程", "公安视听技术", "抢险救援指挥与技术", "火灾勘查", "网络安全与执法", "核生化消防", "海警舰艇指挥与技术", "数据警务技术", "食品药品环境犯罪侦查技术", "未来机器人", "农学", "园艺", "植物保护", "植物科学与技术", "种子科学与工程", "设施农业科学与工程", "茶学", "烟草", "应用生物科学", "农艺教育", "园艺教育", "智慧农业", "菌物科学与工程", "农药化肥", "生物农药科学与工程", "生物育种科学", "农业资源与环境", "野生动物与自然保护区管理", "水土保持与荒漠化防治", "生物质科学与工程", "土地科学与技术", "湿地保护与恢复", "国家公园建设与管理", "动物科学", "蚕学", "蜂学", "经济动物学", "马业科学", "饲料工程", "智慧牧业科学与工程", "动物医学", "动物药学", "动植物检疫", "实验动物学", "中兽医学", "兽医公共卫生", "林学", "园林", "森林保护", "经济林", "智慧林业", "水产养殖学", "海洋渔业科学与技术", "水族科学与技术", "水生动物医学", "草业科学", "草坪科学与工程", "基础医学", "生物医学", "生物医学科学", "临床医学", "麻醉学", "医学影像学", "眼视光医学", "精神医学", "放射医学", "儿科学", "口腔医学", "预防医学", "食品卫生与营养学", "妇幼保健医学", "卫生监督", "全球健康学", "运动与公共健康", "中医学", "针灸推拿学", "藏医学", "蒙医学", "维医学", "壮医学", "哈医学", "傣医学", "回医学", "中医康复学", "中医养生学", "中医儿科学", "中医骨伤科学", "中西医临床医学", "药学", "药物制剂", "临床药学", "药事管理", "药物分析", "药物化学", "海洋药学", "化妆品科学与技术", "中药学", "中药资源与开发", "藏药学", "蒙药学", "中药制药", "中草药栽培与鉴定", "法医学", "医学检验技术", "医学实验技术", "医学影像技术", "眼视光学", "康复治疗学", "口腔医学技术", "卫生检验与检疫", "听力与言语康复学", "康复物理治疗", "康复作业治疗", "智能医学工程", "生物医药数据科学", "智能影像工程", "医工学", "护理学", "助产学", "管理科学", "信息管理与信息系统", "工程管理", "房地产开发与管理", "工程造价", "保密管理", "邮政管理", "大数据管理与应用", "工程审计", "计算金融", "应急管理", "工商管理", "市场营销", "会计学", "财务管理", "国际商务", "人力资源管理", "审计学", "资产评估", "物业管理", "文化产业管理", "劳动关系", "体育经济与管理", "财务会计教育", "市场营销教育", "零售业管理", "创业管理", "海关稽查", "农林经济管理", "农村区域发展", "乡村治理", "公共事业管理", "行政管理", "劳动与社会保障", "土地资源管理", "城市管理", "海关管理", "交通管理", "海事管理", "公共关系学", "健康服务与管理", "海警后勤管理", "医疗产品管理", "医疗保险", "养老服务管理", "海关检验检疫安全", "海外安全管理", "自然资源登记与管理", "慈善管理", "航空安防管理", "无障碍管理", "图书馆学", "档案学", "信息资源管理", "物流管理", "物流工程", "采购管理", "供应链管理", "工业工程", "标准化工程", "质量管理工程", "电子商务", "电子商务及法律", "跨境电子商务", "旅游管理", "酒店管理", "会展经济与管理", "旅游管理与服务教育", "艺术史论", "艺术管理", "非物质文化遗产保护", "音乐表演", "音乐学", "作曲与作曲技术理论", "舞蹈表演", "舞蹈学", "舞蹈编导", "舞蹈教育", "航空服务艺术与管理", "流行音乐", "音乐治疗", "流行舞蹈", "音乐教育", "表演", "戏剧学", "电影学", "戏剧影视文学", "广播电视编导", "戏剧影视导演", "戏剧影视美术设计", "录音艺术", "播音与主持艺术", "动画", "影视摄影与制作", "影视技术", "戏剧教育", "曲艺", "音乐剧", "美术学", "绘画", "雕塑", "摄影", "书法学", "中国画", "实验艺术", "跨媒体艺术", "文物保护与修复", "漫画", "纤维艺术", "科技艺术", "美术教育", "艺术设计学", "视觉传达设计", "环境设计", "产品设计", "服装与服饰设计", "公共艺术", "工艺美术", "数字媒体艺术", "艺术与科技", "陶瓷艺术设计", "新媒体艺术", "包装设计", "珠宝首饰设计与工艺"};

        // 创建正则表达式模式，将关键词连接起来，以用于查找
        String regexPattern = String.join("|", speciality);
        Pattern pattern = Pattern.compile(regexPattern);

        // 创建 Matcher 对象，用于在输入字符串中查找匹配的关键词
        Matcher matcher = pattern.matcher(inputString);

        // 查找并输出匹配的关键词
        while (matcher.find()) {
            result.add(matcher.group());
        }
        return result;
    }

    public static Set getSchool(String inputString) {
        Set<String> result = new HashSet<>();
        String[] school = {"北京大学", "中国人民大学", "清华大学", "北京交通大学", "北京工业大学", "北京航空航天大学", "北京理工大学", "北京科技大学", "北方工业大学", "北京化工大学", "北京工商大学", "北京服装学院", "北京邮电大学", "北京印刷学院", "北京建筑大学", "北京石油化工学院", "北京电子科技学院", "中国农业大学", "北京农学院", "北京林业大学", "北京协和医学院", "首都医科大学", "北京中医药大学", "北京师范大学", "首都师范大学", "首都体育学院", "北京外国语大学", "北京第二外国语学院", "北京语言大学", "中国传媒大学", "中央财经大学", "对外经济贸易大学", "北京物资学院", "首都经济贸易大学", "中国消防救援学院", "外交学院", "中国人民公安大学", "国际关系学院", "北京体育大学", "中央音乐学院", "中国音乐学院", "中央美术学院", "中央戏剧学院", "中国戏曲学院", "北京电影学院", "北京舞蹈学院", "中央民族大学", "中国政法大学", "华北电力大学", "中华女子学院", "北京信息科技大学", "中国矿业大学（北京）", "中国石油大学（北京）", "中国地质大学（北京）", "北京联合大学", "中国青年政治学院", "首钢工学院", "中国劳动关系学院", "北京警察学院", "中国科学院大学", "中国社会科学院大学", "南开大学", "天津大学", "天津科技大学", "天津工业大学", "中国民航大学", "天津理工大学", "天津农学院", "天津医科大学", "天津中医药大学", "天津师范大学", "天津职业技术师范大学", "天津外国语大学", "天津商业大学", "天津财经大学", "天津体育学院", "天津音乐学院", "天津美术学院", "天津城建大学", "天津中德应用技术大学", "河北大学", "河北工程大学", "河北地质大学", "河北工业大学", "华北理工大学", "河北科技大学", "河北建筑工程学院", "河北水利电力学院", "河北农业大学", "河北医科大学", "河北北方学院", "承德医学院", "河北师范大学", "保定学院", "河北民族师范学院", "唐山师范学院", "廊坊师范学院", "衡水学院", "石家庄学院", "邯郸学院", "邢台学院", "沧州师范学院", "石家庄铁道大学", "燕山大学", "河北科技师范学院", "唐山学院", "华北科技学院", "中国人民警察大学", "河北体育学院", "河北金融学院", "北华航天工业学院", "防灾科技学院", "河北经贸大学", "中央司法警官学院", "河北工业职业技术大学", "河北科技工程职业技术大学", "河北石油职业技术大学", "河北中医药大学", "张家口学院", "河北环境工程学院", "山西大学", "太原科技大学", "中北大学", "太原理工大学", "山西农业大学", "山西医科大学", "长治医学院", "山西师范大学", "太原师范学院", "山西大同大学", "晋中学院", "长治学院", "运城学院", "忻州师范学院", "山西财经大学", "山西中医药大学", "吕梁学院", "太原学院", "山西警察学院", "山西工程科技职业大学", "山西工学院", "山西科技学院", "太原工业学院", "山西传媒学院", "山西工程技术学院", "山西能源学院", "内蒙古大学", "内蒙古科技大学", "内蒙古工业大学", "内蒙古农业大学", "内蒙古医科大学", "内蒙古师范大学", "内蒙古民族大学", "赤峰学院", "内蒙古财经大学", "呼伦贝尔学院", "集宁师范学院", "河套学院", "呼和浩特民族学院", "内蒙古艺术学院", "鄂尔多斯应用技术学院", "辽宁大学", "大连理工大学", "沈阳工业大学", "沈阳航空航天大学", "沈阳理工大学", "东北大学", "辽宁科技大学", "辽宁工程技术大学", "辽宁石油化工大学", "沈阳化工大学", "大连交通大学", "大连海事大学", "大连工业大学", "沈阳建筑大学", "辽宁工业大学", "沈阳农业大学", "大连海洋大学", "中国医科大学", "锦州医科大学", "大连医科大学", "辽宁中医药大学", "沈阳药科大学", "沈阳医学院", "辽宁师范大学", "沈阳师范大学", "渤海大学", "鞍山师范学院", "大连外国语大学", "东北财经大学", "中国刑事警察学院", "沈阳体育学院", "沈阳音乐学院", "鲁迅美术学院", "沈阳大学", "大连大学", "辽宁科技学院", "辽宁警察学院", "沈阳工程学院", "辽东学院", "大连民族大学", "营口理工学院", "吉林大学", "延边大学", "长春理工大学", "东北电力大学", "长春工业大学", "吉林建筑大学", "吉林化工学院", "吉林农业大学", "长春中医药大学", "东北师范大学", "北华大学", "通化师范学院", "吉林师范大学", "吉林工程技术师范学院", "长春师范大学", "白城师范学院", "吉林财经大学", "吉林体育学院", "吉林艺术学院", "吉林工商学院", "长春工程学院", "吉林农业科技学院", "吉林警察学院", "长春大学", "吉林医药学院", "黑龙江大学", "哈尔滨工业大学", "哈尔滨理工大学", "哈尔滨工程大学", "黑龙江科技大学", "东北石油大学", "佳木斯大学", "黑龙江八一农垦大学", "东北农业大学", "东北林业大学", "哈尔滨医科大学", "黑龙江中医药大学", "牡丹江医学院", "哈尔滨师范大学", "齐齐哈尔大学", "牡丹江师范学院", "哈尔滨学院", "大庆师范学院", "绥化学院", "哈尔滨商业大学", "哈尔滨体育学院", "哈尔滨金融学院", "齐齐哈尔医学院", "黑龙江工业学院", "黑龙江工程学院", "黑河学院", "哈尔滨音乐学院", "复旦大学", "同济大学", "上海交通大学", "华东理工大学", "上海理工大学", "上海海事大学", "东华大学", "上海电力大学", "上海应用技术大学", "上海健康医学院", "上海海洋大学", "上海中医药大学", "华东师范大学", "上海师范大学", "上海外国语大学", "上海财经大学", "上海对外经贸大学", "上海海关学院", "华东政法大学", "上海体育大学", "上海音乐学院", "上海戏剧学院", "上海大学", "上海公安学院", "上海工程技术大学", "上海立信会计金融学院", "上海电机学院", "上海政法学院", "上海第二工业大学", "上海商学院", "上海科技大学", "南京大学", "苏州大学", "东南大学", "南京航空航天大学", "南京理工大学", "江苏科技大学", "中国矿业大学", "南京工业大学", "常州大学", "南京邮电大学", "河海大学", "江南大学", "南京林业大学", "江苏大学", "南京信息工程大学", "南通大学", "盐城工学院", "南京农业大学", "南京医科大学", "徐州医科大学", "南京中医药大学", "中国药科大学", "南京师范大学", "江苏师范大学", "淮阴师范学院", "盐城师范学院", "南京财经大学", "江苏警官学院", "南京体育学院", "南京艺术学院", "苏州科技大学", "常熟理工学院", "南京工业职业技术大学", "淮阴工学院", "常州工学院", "扬州大学", "南京工程学院", "南京审计大学", "南京晓庄学院", "江苏理工学院", "江苏海洋大学", "徐州工程学院", "南京特殊教育师范学院", "南京警察学院", "泰州学院", "金陵科技学院", "无锡学院", "苏州城市学院", "宿迁学院", "江苏第二师范学院", "浙江大学", "杭州电子科技大学", "浙江工业大学", "浙江理工大学", "浙江海洋大学", "浙江农林大学", "温州医科大学", "浙江中医药大学", "浙江师范大学", "杭州师范大学", "湖州师范学院", "绍兴文理学院", "台州学院", "温州大学", "丽水学院", "浙江工商大学", "嘉兴学院", "中国美术学院", "中国计量大学", "浙江万里学院", "浙江科技学院", "宁波工程学院", "浙江水利水电学院", "浙江财经大学", "浙江警察学院", "衢州学院", "宁波大学", "浙江传媒学院", "浙大城市学院", "浙大宁波理工学院", "杭州医学院", "湖州学院", "温州理工学院", "嘉兴南湖学院", "浙江外国语学院", "浙江音乐学院", "浙江药科职业大学", "安徽大学", "中国科学技术大学", "合肥工业大学", "安徽工业大学", "安徽理工大学", "安徽工程大学", "安徽农业大学", "安徽医科大学", "蚌埠医学院", "皖南医学院", "安徽中医药大学", "安徽师范大学", "阜阳师范大学", "安庆师范大学", "淮北师范大学", "黄山学院", "皖西学院", "滁州学院", "安徽财经大学", "宿州学院", "巢湖学院", "淮南师范学院", "铜陵学院", "安徽建筑大学", "安徽科技学院", "合肥学院", "蚌埠学院", "池州学院", "亳州学院", "合肥师范学院", "安徽艺术学院", "厦门大学", "华侨大学", "福州大学", "福建理工大学", "福建农林大学", "集美大学", "福建医科大学", "福建中医药大学", "福建师范大学", "闽江学院", "武夷学院", "宁德师范学院", "泉州师范学院", "闽南师范大学", "厦门理工学院", "三明学院", "龙岩学院", "福建商学院", "福建警察学院", "莆田学院", "厦门医学院", "福建江夏学院", "福建技术师范学院", "南昌大学", "华东交通大学", "东华理工大学", "南昌航空大学", "江西理工大学", "景德镇陶瓷大学", "江西农业大学", "江西中医药大学", "赣南医学院", "江西师范大学", "上饶师范学院", "宜春学院", "赣南师范大学", "井冈山大学", "江西财经大学", "景德镇学院", "萍乡学院", "江西科技师范大学", "南昌工程学院", "江西警察学院", "新余学院", "九江学院", "赣东学院", "赣南科技学院", "南昌医学院", "豫章师范学院", "南昌师范学院", "山东大学", "中国海洋大学", "山东科技大学", "中国石油大学（华东）", "青岛科技大学", "济南大学", "青岛理工大学", "山东建筑大学", "齐鲁工业大学", "山东理工大学", "山东农业大学", "青岛农业大学", "潍坊医学院", "山东第一医科大学", "滨州医学院", "山东中医药大学", "济宁医学院", "山东师范大学", "曲阜师范大学", "聊城大学", "德州学院", "滨州学院", "鲁东大学", "临沂大学", "泰山学院", "济宁学院", "菏泽学院", "山东财经大学", "山东体育学院", "山东艺术学院", "枣庄学院", "山东工艺美术学院", "青岛大学", "烟台大学", "潍坊学院", "山东警察学院", "山东交通学院", "山东工商学院", "山东女子学院", "山东石油化工学院", "山东政法学院", "齐鲁师范学院", "山东青年政治学院", "山东管理学院", "山东农业工程学院", "华北水利水电大学", "郑州大学", "河南理工大学", "郑州轻工业大学", "河南工业大学", "河南科技大学", "中原工学院", "河南农业大学", "河南科技学院", "河南牧业经济学院", "河南中医药大学", "新乡医学院", "河南大学", "河南师范大学", "信阳师范大学", "周口师范学院", "安阳师范学院", "许昌学院", "南阳师范学院", "洛阳师范学院", "商丘师范学院", "河南财经政法大学", "郑州航空工业管理学院", "黄淮学院", "平顶山学院", "郑州工程技术学院", "洛阳理工学院", "新乡学院", "信阳农林学院", "河南工学院", "安阳工学院", "河南工程学院", "河南财政金融学院", "南阳理工学院", "河南城建学院", "河南警察学院", "郑州警察学院", "郑州师范学院", "武汉大学", "华中科技大学", "武汉科技大学", "长江大学", "武汉工程大学", "中国地质大学（武汉）", "武汉纺织大学", "武汉轻工大学", "武汉理工大学", "湖北工业大学", "华中农业大学", "湖北中医药大学", "华中师范大学", "湖北大学", "湖北师范大学", "黄冈师范学院", "湖北民族大学", "汉江师范学院", "湖北文理学院", "中南财经政法大学", "武汉体育学院", "湖北美术学院", "中南民族大学", "湖北汽车工业学院", "湖北工程学院", "湖北理工学院", "湖北科技学院", "湖北医药学院", "江汉大学", "三峡大学", "湖北警官学院", "荆楚理工学院", "武汉音乐学院", "湖北经济学院", "武汉商学院", "湖北第二师范学院", "湘潭大学", "吉首大学", "湖南大学", "中南大学", "湖南科技大学", "长沙理工大学", "湖南农业大学", "中南林业科技大学", "湖南中医药大学", "湖南师范大学", "湖南理工学院", "湘南学院", "衡阳师范学院", "邵阳学院", "怀化学院", "湖南文理学院", "湖南科技学院", "湖南人文科技学院", "湖南工商大学", "南华大学", "长沙学院", "湖南工程学院", "湖南城市学院", "湖南工学院", "湖南财政经济学院", "湖南警察学院", "湖南工业大学", "湖南女子学院", "湖南第一师范学院", "湖南医药学院", "长沙师范学院", "中山大学", "暨南大学", "汕头大学", "华南理工大学", "华南农业大学", "广东海洋大学", "广州医科大学", "广东医科大学", "广州中医药大学", "广东药科大学", "华南师范大学", "韶关学院", "惠州学院", "韩山师范学院", "岭南师范学院", "肇庆学院", "嘉应学院", "广州体育学院", "广州美术学院", "星海音乐学院", "广东技术师范大学", "深圳大学", "广东财经大学", "广州大学", "广州航海学院", "广东警官学院", "仲恺农业工程学院", "五邑大学", "广东金融学院", "广东石油化工学院", "东莞理工学院", "广东工业大学", "广东外语外贸大学", "佛山科学技术学院", "南方医科大学", "广东第二师范学院", "南方科技大学", "深圳技术大学", "深圳职业技术大学", "广西大学", "广西科技大学", "桂林电子科技大学", "桂林理工大学", "广西医科大学", "右江民族医学院", "广西中医药大学", "桂林医学院", "广西师范大学", "南宁师范大学", "广西民族师范学院", "河池学院", "玉林师范学院", "广西艺术学院", "广西民族大学", "百色学院", "梧州学院", "广西科技师范学院", "广西财经学院", "北部湾大学", "桂林航天工业学院", "桂林旅游学院", "贺州学院", "广西警察学院", "广西农业职业技术大学", "广西职业师范学院", "海南大学", "海南热带海洋学院", "海南师范大学", "海南医学院", "琼台师范学院", "重庆大学", "重庆邮电大学", "重庆交通大学", "重庆医科大学", "西南大学", "重庆师范大学", "重庆文理学院", "重庆三峡学院", "长江师范学院", "四川外国语大学", "西南政法大学", "四川美术学院", "重庆科技学院", "重庆理工大学", "重庆工商大学", "重庆警察学院", "重庆第二师范学院", "四川大学", "西南交通大学", "电子科技大学", "西南石油大学", "成都理工大学", "西南科技大学", "成都信息工程大学", "四川轻化工大学", "西华大学", "中国民用航空飞行学院", "四川农业大学", "西昌学院", "西南医科大学", "成都中医药大学", "川北医学院", "四川师范大学", "西华师范大学", "绵阳师范学院", "内江师范学院", "宜宾学院", "四川文理学院", "阿坝师范学院", "乐山师范学院", "西南财经大学", "成都体育学院", "四川音乐学院", "西南民族大学", "成都大学", "成都工业学院", "攀枝花学院", "四川旅游学院", "四川民族学院", "四川警察学院", "成都医学院", "成都师范学院", "贵州大学", "贵州医科大学", "遵义医科大学", "贵州中医药大学", "贵州师范大学", "遵义师范学院", "铜仁学院", "兴义民族师范学院", "安顺学院", "贵州工程应用技术学院", "凯里学院", "黔南民族师范学院", "贵州财经大学", "贵州民族大学", "贵阳学院", "六盘水师范学院", "贵州商学院", "贵州警察学院", "贵阳康养职业大学", "贵州师范学院", "贵州理工学院", "云南大学", "昆明理工大学", "云南农业大学", "西南林业大学", "昆明医科大学", "大理大学", "云南中医药大学", "云南师范大学", "昭通学院", "曲靖师范学院", "普洱学院", "保山学院", "红河学院", "云南财经大学", "云南艺术学院", "云南民族大学", "玉溪师范学院", "楚雄师范学院", "云南警官学院", "昆明学院", "文山学院", "滇西科技师范学院", "滇西应用技术大学", "西藏农牧学院", "西藏大学", "西藏民族大学", "西藏藏医药大学", "西北大学", "西安交通大学", "西北工业大学", "西安理工大学", "西安电子科技大学", "西安工业大学", "西安建筑科技大学", "西安科技大学", "西安石油大学", "陕西科技大学", "西安工程大学", "长安大学", "西北农林科技大学", "陕西中医药大学", "陕西师范大学", "延安大学", "陕西理工大学", "宝鸡文理学院", "咸阳师范学院", "渭南师范学院", "西安外国语大学", "西北政法大学", "西安体育学院", "西安音乐学院", "西安美术学院", "西安文理学院", "榆林学院", "商洛学院", "安康学院", "西安财经大学", "西安邮电大学", "西安航空学院", "西安医学院", "陕西学前师范学院", "兰州大学", "兰州理工大学", "兰州交通大学", "甘肃农业大学", "甘肃中医药大学", "西北师范大学", "兰州城市学院", "陇东学院", "天水师范学院", "河西学院", "兰州财经大学", "西北民族大学", "甘肃政法大学", "甘肃民族师范学院", "兰州文理学院", "甘肃医学院", "兰州工业学院", "兰州石化职业技术大学", "兰州资源环境职业技术大学", "青海大学", "青海师范大学", "青海民族大学", "宁夏大学", "宁夏医科大学", "宁夏师范学院", "北方民族大学", "新疆大学", "塔里木大学", "新疆农业大学", "石河子大学", "新疆医科大学", "新疆师范大学", "喀什大学", "伊犁师范大学", "新疆财经大学", "新疆艺术学院", "新疆工程学院", "昌吉学院", "新疆警察学院", "新疆理工学院", "新疆第二医学院", "新疆科技学院", "新疆政法学院", "国防科技大学", "海军军医大学", "陆军军医大学", "空军军医大学", "重庆中医药学院", "北京城市学院", "首都师范大学科德学院", "北京工商大学嘉华学院", "北京邮电大学世纪学院", "北京工业大学耿丹学院", "北京第二外国语学院中瑞酒店管理学院", "天津天狮学院", "天津外国语大学滨海外事学院", "天津传媒学院", "天津商业大学宝德学院", "天津医科大学临床医学院", "南开大学滨海学院", "天津师范大学津沽学院", "天津理工大学中环信息学院", "北京科技大学天津学院", "天津仁爱学院", "天津财经大学珠江学院", "河北传媒学院", "河北工程技术学院", "河北美术学院", "河北科技学院", "河北外国语学院", "河北大学工商学院", "华北理工大学轻工学院", "河北师范大学汇华学院", "河北经贸大学经济管理学院", "河北医科大学临床学院", "河北工程大学科信学院", "燕山大学里仁学院", "石家庄铁道大学四方学院", "河北地质大学华信学院", "河北农业大学现代科技学院", "华北理工大学冀唐学院", "保定理工学院", "燕京理工学院", "北京中医药大学东方学院", "沧州交通学院", "河北东方学院", "山西应用科技学院", "晋中信息学院", "山西师范大学现代文理学院", "山西晋中理工学院", "山西医科大学晋祠学院", "山西财经大学华商学院", "山西工商学院", "运城职业技术大学", "内蒙古大学创业学院", "内蒙古鸿德文理学院", "辽宁对外经贸学院", "辽宁理工职业大学", "大连理工大学城市学院", "沈阳工业大学工程学院", "沈阳航空航天大学北方科技学院", "沈阳工学院", "大连工业大学艺术与信息工程学院", "大连科技学院", "沈阳城市建设学院", "大连医科大学中山学院", "锦州医科大学医疗学院", "辽宁师范大学海华学院", "辽宁理工学院", "大连财经学院", "沈阳城市学院", "大连艺术学院", "辽宁中医药大学杏林学院", "辽宁何氏医学院", "沈阳科技学院", "大连东软信息学院", "辽宁财贸学院", "辽宁传媒学院", "吉林外国语大学", "长春光华学院", "长春工业大学人文信息学院", "长春电子科技学院", "长春财经学院", "吉林建筑科技学院", "长春建筑学院", "长春科技学院", "吉林动画学院", "吉林师范大学博达学院", "长春大学旅游学院", "长春人文学院", "黑龙江东方学院", "哈尔滨信息工程学院", "齐齐哈尔工程学院", "黑龙江外国语学院", "黑龙江财经学院", "哈尔滨石油学院", "黑龙江工商学院", "哈尔滨远东理工学院", "哈尔滨剑桥学院", "黑龙江工程学院昆仑旅游学院", "哈尔滨广厦学院", "哈尔滨华德学院", "上海杉达学院", "上海立达学院", "上海建桥学院", "上海兴伟学院", "上海中侨职业技术大学", "上海视觉艺术学院", "上海外国语大学贤达经济人文学院", "上海师范大学天华学院", "三江学院", "南通理工学院", "东南大学成贤学院", "无锡太湖学院", "中国矿业大学徐海学院", "南京大学金陵学院", "南京理工大学紫金学院", "南京航空航天大学金城学院", "南京传媒学院", "南京理工大学泰州科技学院", "南京师范大学泰州学院", "南京工业大学浦江学院", "南京师范大学中北学院", "南京医科大学康达学院", "南京中医药大学翰林学院", "苏州大学应用技术学院", "苏州科技大学天平学院", "江苏大学京江学院", "扬州大学广陵学院", "江苏师范大学科文学院", "南京邮电大学通达学院", "南京财经大学红山学院", "江苏科技大学苏州理工学院", "常州大学怀德学院", "南通大学杏林学院", "南京审计大学金审学院", "浙江树人学院", "浙江越秀外国语学院", "宁波财经学院", "浙江广厦建设职业技术大学", "浙江工业大学之江学院", "浙江师范大学行知学院", "宁波大学科学技术学院", "杭州电子科技大学信息工程学院", "浙江理工大学科技与艺术学院", "浙江农林大学暨阳学院", "温州医科大学仁济学院", "浙江中医药大学滨江学院", "杭州师范大学钱江学院", "绍兴文理学院元培学院", "浙江工商大学杭州商学院", "中国计量大学现代科技学院", "浙江财经大学东方学院", "温州商学院", "同济大学浙江学院", "上海财经大学浙江学院", "西湖大学", "安徽三联学院", "安徽新华学院", "安徽文达信息工程学院", "安徽外国语学院", "蚌埠工商学院", "安徽大学江淮学院", "安徽信息工程学院", "马鞍山学院", "合肥城市学院", "合肥经济学院", "安徽师范大学皖江学院", "安徽医科大学临床医学院", "阜阳师范大学信息工程学院", "淮北理工学院", "皖江工学院", "仰恩大学", "厦门华厦学院", "闽南理工学院", "泉州职业技术大学", "闽南科技学院", "福州工商学院", "厦门工学院", "阳光学院", "厦门大学嘉庚学院", "福州大学至诚学院", "集美大学诚毅学院", "福建师范大学协和学院", "福州外语外贸学院", "泉州信息工程学院", "福州理工学院", "福建农林大学金山学院", "江西科技学院", "江西工程学院", "南昌理工学院", "江西应用科技学院", "江西服装学院", "南昌职业大学", "南昌工学院", "南昌大学科学技术学院", "南昌大学共青学院", "南昌交通学院", "南昌航空大学科技学院", "景德镇艺术职业大学", "江西农业大学南昌商学院", "江西师范大学科学技术学院", "赣南师范大学科技学院", "南昌应用技术师范学院", "江西财经大学现代经济管理学院", "江西软件职业技术大学", "齐鲁医药学院", "青岛滨海学院", "烟台南山学院", "潍坊科技学院", "山东英才学院", "青岛恒星科技学院", "青岛黄海学院", "山东现代学院", "山东协和学院", "山东工程职业技术大学", "烟台理工学院", "聊城大学东昌学院", "青岛城市学院", "潍坊理工学院", "山东财经大学燕山学院", "山东外国语职业技术大学", "泰山科技学院", "山东华宇工学院", "山东外事职业大学", "青岛工学院", "青岛农业大学海都学院", "齐鲁理工学院", "山东财经大学东方学院", "烟台科技学院", "青岛电影学院", "黄河科技学院", "郑州科技学院", "郑州工业应用技术学院", "郑州财经学院", "黄河交通学院", "商丘工学院", "河南开封科技传媒学院", "中原科技学院", "信阳学院", "安阳学院", "新乡医学院三全学院", "新乡工程学院", "郑州工商学院", "郑州经贸学院", "商丘学院", "郑州商学院", "河南科技职业大学", "郑州升达经贸管理学院", "郑州西亚斯学院", "武汉东湖学院", "汉口学院", "武昌首义学院", "武昌理工学院", "武汉生物工程学院", "武汉晴川学院", "湖北大学知行学院", "武汉城市学院", "三峡大学科技学院", "武汉文理学院", "湖北工业大学工程技术学院", "武汉工程大学邮电与信息工程学院", "武汉纺织大学外经贸学院", "武昌工学院", "武汉工商学院", "荆州学院", "长江大学文理学院", "湖北商贸学院", "湖北汽车工业学院科技学院", "湖北医药学院药护学院", "湖北恩施学院", "湖北经济学院法商学院", "武汉体育学院体育科技学院", "湖北师范大学文理学院", "湖北文理学院理工学院", "湖北工程学院新技术学院", "文华学院", "武汉学院", "武汉工程科技学院", "武汉华夏理工学院", "武汉传媒学院", "武汉设计工程学院", "长沙医学院", "湖南涉外经济学院", "湘潭大学兴湘学院", "湖南工业大学科技学院", "湖南科技大学潇湘学院", "南华大学船山学院", "湘潭理工学院", "湖南师范大学树达学院", "湖南农业大学东方科技学院", "中南林业科技大学涉外学院", "湖南文理学院芙蓉学院", "湖南理工学院南湖学院", "衡阳师范学院南岳学院", "湖南工程学院应用技术学院", "湖南中医药大学湘杏学院", "吉首大学张家界学院", "长沙理工大学城南学院", "湖南应用技术学院", "湖南信息学院", "湖南交通工程学院", "湖南软件职业技术大学", "广东白云学院", "电子科技大学中山学院", "广东培正学院", "广东东软学院", "广州城市理工学院", "广州软件学院", "广州南方学院", "广东外语外贸大学南国商学院", "广州华商学院", "湛江科技学院", "华南农业大学珠江学院", "广州理工学院", "北京师范大学珠海分校", "广州华立学院", "广州应用科技学院", "广州商学院", "北京理工大学珠海学院", "珠海科技学院", "广州工商学院", "广州科技职业技术大学", "广东科技学院", "广东理工学院", "广东工商职业技术大学", "东莞城市学院", "广州新华学院", "南宁学院", "北海艺术设计学院", "柳州工学院", "广西民族大学相思湖学院", "桂林学院", "南宁师范大学师园学院", "广西中医药大学赛恩斯新医药学院", "桂林信息科技学院", "南宁理工学院", "广西外国语学院", "北京航空航天大学北海学院", "广西城市职业大学", "海口经济学院", "三亚学院", "海南科技职业大学", "重庆机电职业技术大学", "重庆工程学院", "重庆城市科技学院", "重庆人文科技学院", "重庆外语外事学院", "重庆对外经贸学院", "重庆财经学院", "重庆工商大学派斯学院", "重庆移通学院", "成都东软学院", "成都艺术职业大学", "电子科技大学成都学院", "成都理工大学工程技术学院", "四川传媒学院", "成都银杏酒店管理学院", "成都文理学院", "四川工商学院", "四川外国语大学成都学院", "四川工业科技学院", "成都锦城学院", "西南财经大学天府学院", "四川大学锦江学院", "四川文化艺术学院", "绵阳城市学院", "西南交通大学希望学院", "四川电影电视学院", "吉利学院", "贵州中医药大学时珍学院", "贵州黔南经济学院", "贵州黔南科技学院", "贵阳信息科技学院", "贵阳人文科技学院", "遵义医科大学医学与科技学院", "贵州医科大学神奇民族医药学院", "茅台学院", "云南经济管理学院", "云南大学滇池学院", "丽江文化旅游学院", "昆明理工大学津桥学院", "昆明城市学院", "昆明文理学院", "昆明医科大学海源学院", "云南艺术学院文华学院", "云南工商学院", "西安培华学院", "西安欧亚学院", "西安外事学院", "西安翻译学院", "西京学院", "西安思源学院", "陕西国际商贸学院", "陕西服装工程学院", "西安交通工程学院", "西安交通大学城市学院", "西北大学现代学院", "西安建筑科技大学华清学院", "西安财经大学行知学院", "陕西科技大学镐京学院", "西安工商学院", "延安大学西安创新学院", "西安电子科技大学长安学院", "西安汽车职业大学", "西安明德理工学院", "西安信息职业大学", "长安大学兴华学院", "西安理工大学高科学院", "西安科技大学高新学院", "兰州工商学院", "兰州博文科技学院", "兰州信息科技学院", "青海大学昆仑学院", "宁夏理工学院", "宁夏大学新华学院", "银川能源学院", "银川科技学院", "新疆农业大学科学技术学院", "新疆天山职业技术大学", "郑州美术学院", "上海纽约大学", "西交利物浦大学", "昆山杜克大学", "宁波诺丁汉大学", "温州肯恩大学", "北京师范大学-香港浸会大学联合国际学院", "香港中文大学（深圳）", "深圳北理莫斯科大学", "广东以色列理工学院", "香港科技大学（广州）", "海南比勒费尔德应用科学大学"};
        // 创建正则表达式模式，将关键词连接起来，以用于查找
        String regexPattern = String.join("|", school);
        Pattern pattern = Pattern.compile(regexPattern);

        // 创建 Matcher 对象，用于在输入字符串中查找匹配的关键词
        Matcher matcher = pattern.matcher(inputString);

        // 查找并输出匹配的关键词
        while (matcher.find()) {
            result.add(matcher.group());
        }
        return result;
    }

    public static String checkSchool(Set<String> set) {
        String[] school = {"北京大学", "清华大学", "中共中央党校", "中国人民大学", "北京航空航天大学", "北京理工大学", "北京交通大学", "北京邮电大学", "中国地质大学（北京）", "华北电力大学（北京）", "中国石油大学（北京）", "中国矿业大学（北京）", "中央财经大学", "中国政法大学", "对外经济贸易大学", "北京师范大学", "北京科技大学", "北京化工大学", "北京工业大学", "北京林业大学", "北京建筑大学", "中央民族大学", "中国青年政治学院", "北京外国语大学", "中国科学院大学", "天津大学", "南开大学", "华北电力大学（保定）", "河北工业大学", "石家庄铁道大学", "太原理工大学", "内蒙古大学", "大连理工大学", "东北财经大学", "东北大学", "辽宁大学", "沈阳建筑大学", "大连海事大学", "吉林大学", "东北师范大学", "延边大学", "哈尔滨工业大学", "哈尔滨工程大学", "复旦大学", "上海交通大学", "同济大学", "上海财经大学", "华东理工大学", "上海外国语大学", "华东师范大学", "上海大学", "南京大学", "东南大学", "河海大学", "南京理工大学", "中国矿业大学（徐州）", "江南大学", "南京航空航天大学", "苏州大学", "南京农业大学", "南京师范大学", "南京邮电大学", "浙江大学", "宁波大学", "中国科学技术大学", "合肥工业大学", "安徽大学", "厦门大学", "福州大学", "南昌大学", "山东大学", "中国海洋大学", "中国石油大学（华东）", "郑州大学", "华北水利水电大学", "河南大学", "武汉大学", "武汉理工大学", "中南财经政法大学", "华中科技大学", "中国地质大学（武汉）", "华中师范大学", "中南大学", "湖南大学", "国防科学技术大学", "长沙理工大学", "中山大学", "华南理工大学", "暨南大学", "华南师范大学", "广西大学", "海南大学", "重庆大学", "重庆交通大学", "西南政法大学", "西南大学", "四川大学", "西南交通大学", "西南财经大学", "电子科技大学", "成都理工大学", "四川农业大学", "贵州大学", "云南大学", "西藏大学", "西安交通大学", "长安大学", "西北大学", "西安建筑科技大学", "西安电子科技大学", "西北工业大学", "西北农林科技大学", "兰州大学", "兰州交通大学", "青海大学", "宁夏大学", "新疆大学", "石河子大学", "中国农业大学", "北方工业大学", "北京工商大学", "首都经济贸易大学", "北京第二外国语大学", "国际关系学院", "中国社会科学院大学", "北京物资学院", "北京信息科技大学", "天津理工大学", "天津城建大学", "天津财经大学", "天津工业大学", "天津科技大学", "中国民航大学", "河北大学", "河北经贸大学", "河北农业大学", "河北工程大学", "河北建筑工程学院", "华北理工大学", "燕山大学", "河北科技大学", "应急管理大学", "河北地质大学", "太原科技大学", "山西大学", "山西财经大学", "中北大学", "内蒙古工业大学", "内蒙古科技大学", "内蒙古农业大学", "内蒙古财经大学", "大连海洋大学", "沈阳理工大学", "辽宁工程技术大学", "大连大学", "沈阳工业大学", "辽宁工业大学", "辽宁科技大学", "大连交通大学", "吉林建筑大学", "长春工程学院", "东北电力大学", "北华大学", "哈尔滨理工大学", "东北林业大学", "东北石油大学", "黑龙江大学", "黑龙江科技大学", "上海海洋大学", "上海理工大学", "上海海事大学", "上海电机学院", "上海师范大学", "上海工程技术大学", "华东政法大学", "东华大学", "江苏大学", "江苏科技大学", "南通大学", "南京信息工程大学", "南京工业大学", "南京林业大学", "苏州科技大学", "南京审计大学", "扬州大学", "浙江工业大学", "中国计量大学", "浙江农林大学", "安徽理工大学", "安徽建筑大学", "安徽工程大学", "安徽工业大学", "安徽财经大学", "福建工程大学", "集美大学", "华侨大学", "江西理工大学", "华东交通大学", "东华理工大学", "江西财经大学", "山东科技大学", "山东理工大学", "山东建筑大学", "烟台大学", "青岛理工大学", "山东财经大学", "山东交通学院", "济南大学", "河南理工大学", "河南城建学院", "河南科技大学", "河南工业大学", "河南财经政法大学", "武汉工程大学", "武汉科技大学", "华中农业大学", "湖北工业大学", "中南民族大学", "湖北大学", "三峡大学", "湖南工业大学", "湘潭大学", "中南林业科技大学", "湖南理工学院", "湖南科技大学", "湖南工学院", "湖南师范大学", "吉首大学", "南华大学", "深圳大学", "广东财经大学", "广东工业大学", "广东海洋大学", "广州大学", "华南农业大学", "广州航海学院", "桂林理工大学", "广西科技大学", "重庆理工大学", "重庆科技学院", "西南科技大学", "西华大学", "西南石油大学", "贵州理工学院", "贵州财经大学", "昆明理工大学", "云南财经大学", "西安科技大学", "西安工业大学", "延安大学", "西安理工大学", "西北政法大学", "陕西师范大学", "西安外国语大学", "西安财经大学", "兰州理工大学", "兰州工业学院", "西北民族大学", "兰州财经大学", "北方民族大学", "香港大学", "香港中文大学", "香港科技大学", "香港城市大学", "香港理工大学", "国立台湾大学", "麻省理工学院", "斯坦福大学", "哈佛大学", "芝加哥大学", "宾夕法尼亚大学", "普林斯顿大学", "耶鲁大学", "康奈尔大学", "哥伦比亚大学", "约翰霍普金斯大学", "密歇根大学安娜堡分校", "加州大学伯克利分校", "纽约大学", "加州大学洛杉矶分校", "杜克大学", "加州大学圣地亚哥分校", "布朗大学", "华盛顿大学", "德克萨斯大学奥斯汀分校", "佐治亚理工学院", "莱斯大学", "北卡罗来纳大学教堂山分校", "波士顿大学", "圣路易斯华盛顿大学", "南加州大学", "俄亥俄州立大学", "罗切斯特大学", "凯斯西储大学", "匹兹堡大学", "加州理工学院", "西北大学", "卡耐基梅隆大学", "威斯康辛大学麦迪逊分校", "伊利诺伊大学厄本那-香槟分校", "宾州州立大学公园分校", "普渡大学西拉法叶分校", "加州大学戴维斯分校", "加州大学圣塔芭芭拉分校", "密歇根州立大学", "马里兰大学学院公园分校", "艾茉莉大学", "剑桥大学", "牛津大学", "帝国理工学院", "伦敦大学学院", "爱丁堡大学", "曼彻斯特大学", "布里斯托大学", "华威大学", "南安普敦大学", "格拉斯哥大学", "利兹大学", "伯明翰大学", "杜伦大学", "谢菲尔德大学", "圣安德鲁斯大学", "都柏林三一学院", "诺丁汉大学", "纽卡斯尔大学（英国）", "伦敦大学玛丽女王学院", "兰卡斯特大学", "约克大学（英国）", "埃克塞特大学", "卡迪夫大学", "伦敦大学国王学院", "伦敦政治经济学院", "麦吉尔大学", "多伦多大学", "阿尔伯塔大学", "蒙特利尔大学", "麦克马斯特大学", "滑铁卢大学", "英属哥伦比亚大学", "阿姆斯特丹大学", "乌得勒支大学", "代尔夫特理工大学", "万格宁根大学", "埃因霍温理工大学", "格罗宁根大学", "莱顿大学", "墨尔本大学", "悉尼大学", "新南威尔士大学", "♘士兰大学", "莫纳什大学", "西澳大学", "阿德雷德大学", "悉尼科技大学", "澳洲国立大学", "慕尼黑工业大学", "慕尼黑大学", "海德堡大学", "柏林自由大学", "柏林洪堡大学", "卡尔斯鲁厄理工学院", "亚琛工业大学", "柏林工业大学", "苏黎世联邦理工学院", "洛桑联邦理工学院", "苏黎世大学", "伯尔尼大学", "日内瓦大学", "巴塞尔大学", "隆德大学", "乌普萨拉大学", "瑞典皇家理工学院", "查尔姆斯工业大学", "斯德哥尔摩大学", "东京大学", "京都大学", "东京工业大学", "大阪大学", "东北大学（日本）", "名古屋大学", "九州大学", "北海道大学", "首尔国立大学", "浦项科技大学", "延世大学", "高丽大学", "成均馆大学", "韩国高等科技学院", "汉阳大学", "巴黎理工学院", "索邦大学", "巴黎第九大学", "巴黎萨克雷大学", "里昂高等师范学院", "马来亚大学", "马来西亚博特拉大学", "马来西亚国民大学", "马来西亚理科大学", "米兰理工大学", "博洛尼亚大学", "哥本哈根大学", "丹麦理工大学", "奥胡斯大学", "新加坡国立大学", "南洋理工大学", "莫斯科国立大学", "布宜诺斯艾利斯大学", "维也纳大学", "圣保罗大学", "鲁汶大学（荷语）", "根特大学", "赫尔辛基大学", "阿尔托大学", "墨西哥国立自治大学", "蒙特雷理工学院", "奥斯陆大学", "阿卜杜勒阿齐兹国王大学", "法赫德国王石油与矿产大学", "奥克兰大学", "智利天主大学"};

        // 创建正则表达式模式，将关键词连接起来，以用于查找
        String regexPattern = String.join("|", school);
        Pattern pattern = Pattern.compile(regexPattern);

        for (String item : set) {
            // 创建 Matcher 对象，用于在输入字符串中查找匹配的关键词
            Matcher matcher = pattern.matcher(item);
            // 查找并输出匹配的关键词
            while (matcher.find()) {
                return matcher.group();
            }
        }
        return null;
    }
}
